package chap20_enum.enums;

public enum MethodMonth {
	JAN(1), 
	FEB(2), 
	MAR(3), 
	APR(4), 
	MAY(5), 
	JUN(6),
	JUL(7), 
	AUG(8), 
	SEP(9), 
	OCT(10), 
	NOV(11), 
	DEC(12);

	private int monthValue;

	MethodMonth(int monthValue) {
		this.monthValue = monthValue;
	}
	
	public int getMonthValue() {
		return this.monthValue;
	}
	
	// 1. enum에 static 메소드 선언
	public static void printMonths() {
		MethodMonth[] methodMonthArr = MethodMonth.values();
		
		for(MethodMonth methodMonth : methodMonthArr) {
			System.out.println(methodMonth + "는(은)" + methodMonth.getMonthValue() + "월입니다.");
		}
	}
	
	// 2. enum에 일반(인스턴스) 메소드 선언
	public void printMonth(int month) {
		MethodMonth[] methodMonthArr = MethodMonth.values();
		
		for(MethodMonth methodMonth : methodMonthArr) {
			if(methodMonth.getMonthValue() == month) {
				System.out.println("입력한 달은 " + methodMonth.getMonthValue() + "월입니다.");
			}
		}
	}
	
	// 현재 생성된 상수 객체의 월 값에 매개변수로 받은 개월 수를 더해서
	// month 개월 후가 몇월달인지 출력하는 메소드를 구현하세요.
	public void printAddMonth(int month) {
		if(this.monthValue + month > 12)
			System.out.println(month + "개월 후는 " + (this.monthValue + month) % 12 + "월입니다.");
		else
			System.out.println(month + "개월 후는 " + (this.monthValue + month) + "월입니다.");
	}
	
	// 3. enum에 추상메소드 선언
	// enum에 선언된 추상메소드는 자식클래스에서 구현되는 게 아니고 선언된 상수마다 구현을 해줘야한다.
	public abstract void printHangulMonth();
	
	
	
	
	
	
	
	
	
	
	
}
